{"mappings":"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","sources":["src/index.js","src/utils.js"],"sourcesContent":["import {\n  eventsStack,\n  clone,\n  createEvent,\n  listenerExists,\n  splitEvents,\n} from './utils';\n\n/**\n * Adds a new bus event callback or event listener\n *\n * @param {string|Element} first bus event name or dom element\n * @param {string|Function} middle bus event callback or event type\n * @param {Function|undefined} last listener callback\n * @param {Object} opts event type options\n */\nexport const on = (first, middle, last = undefined, opts = {}) => {\n  const e = splitEvents(!last ? first : middle);\n\n  if (!last) {\n    for (let i = 0; i < e.length; i++) {\n      const ev = e[i];\n\n      if (listenerExists(ev, middle)) return;\n\n      createEvent(ev);\n\n      middle && eventsStack[ev].push(middle);\n    }\n  } else {\n    for (let i = 0; i < e.length; i++) {\n      const ev = e[i];\n      first.addEventListener(ev, last, opts);\n    }\n  }\n};\n\n/**\n * Removes a bus event callback or event listener\n *\n * @param {string|Element} first bus event name or dom element\n * @param {string|Function} middle bus event callback or event type\n * @param {Function|undefined} last listener callback\n */\nexport const off = (first, middle, last) => {\n  const e = splitEvents(!last ? first : middle);\n\n  if (!last) {\n    for (let i = 0; i < e.length; i++) {\n      const ev = e[i];\n\n      if (!listenerExists(ev, middle)) return;\n\n      eventsStack[ev].splice(eventsStack[ev].indexOf(middle), 1);\n    }\n  } else {\n    for (let i = 0; i < e.length; i++) {\n      const ev = e[i];\n      first.removeEventListener(ev, last);\n    }\n  }\n};\n\n/**\n * Adds the event and removes it after the first occurrence\n *\n * @param {string|Element} first bus event name or dom element\n * @param {string|Function} middle bus event callback or event type\n * @param {Function|undefined} last listener callback\n * @param {Object} opts event type options\n */\nexport const once = (first, middle, last = undefined, opts = {}) => {\n  if (!last) {\n    const fn = async () => {\n      off(first, fn);\n      await middle();\n    };\n\n    on(first, fn);\n  } else {\n    const fn = () => {\n      last();\n      off(first, middle, fn);\n    };\n\n    on(first, middle, fn, opts);\n  }\n};\n\n/**\n * Emits the given event\n *\n * @param {string} event bus event name\n * @param  {...any} params optional parameters for the callbacks\n */\nexport const emit = (event, ...params) => {\n  if (!eventsStack[event]) return;\n\n  for (let i = 0; i < eventsStack[event].length; i++) {\n    eventsStack[event][i](...params);\n  }\n};\n\n/**\n * Emits the given event asyncronously\n *\n * @param {string} event bus event name\n * @param  {...any} params optional parameters for the callbacks\n */\nexport const emitAsync = (event, ...params) => {\n  if (!eventsStack[event]) return;\n\n  return Promise.all(\n    eventsStack[event].map((cb) => Promise.resolve(cb(...params)))\n  );\n};\n\n/**\n * Returns a clone of the events stack. Usefull for debugging\n *\n * @returns Object\n */\nexport const inspect = () => clone();\n","export const eventsStack = {};\n\nexport const clone = () => ({ ...eventsStack });\n\nexport const createEvent = (event) =>\n  (eventsStack[event] = eventsStack[event] || []);\n\nexport const listenerExists = (event, cb) => !!eventsStack[event]?.includes(cb);\n\nexport const splitEvents = (events) => events.split(' ');\n"],"names":[],"version":3,"file":"main.js.map"}